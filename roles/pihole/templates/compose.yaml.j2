version: "3.4"
networks:
  pihole:
services:
  pihole:
    container_name: pihole
    hostname: pihole
    restart: always
    image: "{{ pihole_image }}"
    networks: 
      - pihole
    dns:
      - "127.0.0.1"
      - "{{ static_dns }}"
    depends_on:
{% for name in pihole_doh_providers.keys() %}
      pihole-doh-{{name}}: 
        condition: service_started
{% endfor %}
    volumes:
      - "/home/{{ ansible_user }}/pihole/pihole/:/etc/pihole/"
      - "/home/{{ ansible_user }}/pihole/dnsmasq.d/:/etc/dnsmasq.d/"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - 8081:80
      - 53:53/tcp
      - 53:53/udp
    environment:
      FTLCONF_LOCAL_IPV4: "{{ ns_vip }}"
      TZ: "{{ timezone }}"
      WEBPASSWORD: "{{ pihole_webpassword }}"
      PIHOLE_DNS_: "{{ pihole_upstreams | join(';') }}"
      DNSMASQ_LISTENING: "all"
      FTLCONF_MAXDBDAYS: "{{ pihole_ftl_max_db_days }}"
      FTLCONF_PIHOLE_PTR: "{{ pihole_virtual_host }}"
    healthcheck:
      test: curl -f "http://localhost/admin" || exit 1
      interval: 10s
      timeout: 10s
      retries: 3

{% for name, upstreams in pihole_doh_providers.items() %}
  pihole-doh-{{name}}:
    container_name: pihole-doh-{{name}}
    hostname: pihole-doh-{{name}}
    restart: always
    image: "{{ cloudflared_image }}"
    networks: 
      - pihole
    command: 
      - proxy-dns
{% for upstream in upstreams %}
      - --upstream
      - {{upstream}}
{% endfor %}
    environment:
      TUNNEL_METRICS: "0.0.0.0:9001"
      TUNNEL_DNS_ADDRESS: "0.0.0.0"
    ports:
      - "53/tcp"
      - "53/udp"
      - "9001/tcp"
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
{% endfor %}
